# Here's the code for: The problem of a confused investor
# Assume you’re a venture capitalist and would like to figure out which start ups you should invest in.
# So you look at hundreds of start ups, and for each you write down: 
# 1. how much money they’ve already raised 
# 2. what % of their staff are engineers 
# 3. whether they’ve ultimately been successful, on a scale of 1 (most successful) to 4 (a total cluster)
# You then decide to put this info in a graph, plotting (1) money on the x-axis and (2) % engineers on the y-axis. 
# The color of each mark represents how successful they’ve been.

# This code a) builds the model, and b) shows the classification. As described in the Medium blog post, purpose of 
# this post is to show you how the neural network is created and works. I purposely haven’t gone into two very 
# important concepts: training and validation. These are absolutely critical to do if you want to be sure your 
# neural network doesn’t only work on the data you gave it. 
# Said another way, your neural network was trained only on start ups you’ve already seen. 
# You’ll be able to trust its results on  new start ups (that you haven’t yet seen) only once you validate it.

# NOTE: There are a TON of ways to make this code more efficient (for production). I've explicitly written out 
# functions to show how they work. 

